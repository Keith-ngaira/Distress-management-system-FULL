# =================================================================
# DISTRESS MANAGEMENT SYSTEM - ENVIRONMENT CONFIGURATION
# =================================================================

# Database Configuration
# -----------------------
# MySQL Database Connection Settings
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=your_mysql_password_here
DB_NAME=management
DB_PORT=3306

# Optional: Enable SSL for database connection (set to 'true' if needed)
DB_SSL=false

# Optional: Database connection pool settings
DB_CONNECTION_LIMIT=20
DB_QUEUE_LIMIT=0
DB_ACQUIRE_TIMEOUT=60000
DB_TIMEOUT=60000

# Server Configuration
# --------------------
NODE_ENV=production
PORT=5556

# JWT Configuration
# -----------------
# IMPORTANT: Change this to a strong, unique secret in production
JWT_SECRET=your-super-secret-jwt-key-change-in-production-make-it-very-long-and-random

# JWT Token Settings
JWT_EXPIRES_IN=24h
JWT_ISSUER=distress-management-system
JWT_AUDIENCE=distress-management-users

# Frontend Configuration
# ----------------------
# Frontend URL for CORS configuration
FRONTEND_URL=http://localhost:3000

# Additional allowed origins (comma-separated)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3002,http://127.0.0.1:3000

# Security Configuration
# ----------------------
# Rate limiting settings
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=1000
RATE_LIMIT_AUTH_MAX=20

# Session settings
SESSION_SECRET=your-session-secret-change-in-production
SECURE_COOKIES=false

# File Upload Configuration
# -------------------------
# Upload directory (relative to backend root)
UPLOAD_DIR=uploads

# Maximum file size in bytes (default: 10MB)
MAX_FILE_SIZE=10485760

# Allowed file types (comma-separated)
ALLOWED_FILE_TYPES=pdf,doc,docx,jpg,jpeg,png,gif,txt,csv,xlsx

# Logging Configuration
# ---------------------
# Log level (error, warn, info, verbose, debug, silly)
LOG_LEVEL=info

# Log file settings
LOG_FILE_PATH=logs/app.log
LOG_MAX_SIZE=10m
LOG_MAX_FILES=5

# Email Configuration (if needed for notifications)
# ------------------------------------------------
SMTP_HOST=your-smtp-server.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@example.com
SMTP_PASS=your-email-password

# Notification Configuration
# -------------------------
# Enable real-time notifications
ENABLE_NOTIFICATIONS=true

# Notification refresh interval (in milliseconds)
NOTIFICATION_INTERVAL=30000

# Application Configuration
# -------------------------
# Application name
APP_NAME=Distress Management System

# Application version
APP_VERSION=1.0.0

# Admin email for system notifications
ADMIN_EMAIL=admin@distressms.com

# System timezone
TIMEZONE=UTC

# Performance Configuration
# -------------------------
# Enable compression
ENABLE_COMPRESSION=true

# Enable request logging
ENABLE_REQUEST_LOGGING=true

# Cache settings
CACHE_TTL=300

# Development Configuration
# -------------------------
# Enable debug mode (development only)
DEBUG_MODE=false

# Enable SQL query logging (development only)
LOG_SQL_QUERIES=false

# Enable detailed error responses (development only)
DETAILED_ERRORS=false

# =================================================================
# PRODUCTION DEPLOYMENT NOTES
# =================================================================

# 1. Database Security:
#    - Use a dedicated database user with limited privileges
#    - Enable SSL connection if your database supports it
#    - Use strong, unique passwords
#    - Consider using environment-specific database names

# 2. JWT Security:
#    - Generate a strong, random JWT_SECRET (at least 256 bits)
#    - Consider shorter token expiration times for sensitive environments
#    - Implement token refresh mechanisms

# 3. CORS Security:
#    - Specify exact frontend URLs instead of wildcards
#    - Remove any development URLs from production ALLOWED_ORIGINS
#    - Enable HTTPS in production

# 4. Rate Limiting:
#    - Adjust rate limits based on your expected traffic
#    - Consider implementing different limits for different endpoints
#    - Monitor and adjust based on usage patterns

# 5. File Upload Security:
#    - Restrict file types to only what's necessary
#    - Implement virus scanning for uploaded files
#    - Store uploads outside of web-accessible directories
#    - Set appropriate file size limits

# 6. Logging:
#    - Use appropriate log levels for production
#    - Implement log rotation to manage disk space
#    - Consider centralized logging solutions
#    - Never log sensitive information like passwords

# 7. SSL/TLS:
#    - Use HTTPS in production
#    - Enable secure cookies
#    - Implement HSTS headers

# 8. Monitoring:
#    - Set up health check endpoints
#    - Implement application performance monitoring
#    - Configure alerts for critical errors
#    - Monitor database performance and connections

# =================================================================
